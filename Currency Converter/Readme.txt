import cx_Oracle
import logging
import datetime
from typing import List, Dict, Any

# --- Constants ---
DB_HOST = "your_host"
DB_PORT = 1521
DB_SERVICE = "your_service"
DB_USERNAME = "your_username"
DB_PASSWORD = "your_password"

PO_IDS = [
    80000, 90000, 90500, 100000, 110000, 120000, 130000, 140000, 150000,
    160000, 1650000, 170000, 175000, 161000, 140100, 140300, 140200, 9100
]

LOAD_NAMES = ("dwbuild", "dwswap:taxlot", "pm reports")
LOG_FILE = f"query_validation_{datetime.date.today().isoformat()}.log"

# --- Logging Configuration ---
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
)

# --- Database Connection ---
def get_db_connection() -> cx_Oracle.Connection:
    dsn = cx_Oracle.makedsn(DB_HOST, DB_PORT, service_name=DB_SERVICE)
    try:
        conn = cx_Oracle.connect(user=DB_USERNAME, password=DB_PASSWORD, dsn=dsn)
        logging.info("Successfully connected to Oracle database.")
        return conn
    except cx_Oracle.DatabaseError as e:
        logging.error("Failed to connect to the database: %s", e)
        raise

# --- Query Builder ---
def build_query(po_id: int) -> str:
    load_names_formatted = "', '".join(LOAD_NAMES)
    return f"""
        SELECT * FROM load_status
        WHERE po_id = {po_id}
          AND load_name IN ('{load_names_formatted}')
        ORDER BY 1 DESC
    """

# --- Result Validator ---
def validate_results(rows: List[Dict[str, Any]]) -> List[int]:
    invalid_load_ids = []
    for i, row in enumerate(rows[:10]):
        code = row.get('LOAD_STATUS_CODE', '').upper()
        desc = row.get('LOAD_STATUS_DESC', '').lower()
        load_id = row.get('LOAD_ID', 'UNKNOWN')

        if code != 'C' or 'complete' not in desc:
            invalid_load_ids.append(load_id)
            logging.warning(
                "Invalid row #%d | LOAD_ID: %s | Status Code: '%s' | Description: '%s'",
                i + 1, load_id, code, desc
            )
    return invalid_load_ids

# --- Query Executor ---
def execute_query(cursor: cx_Oracle.Cursor, query: str) -> List[Dict[str, Any]]:
    cursor.execute(query)
    columns = [col[0] for col in cursor.description]
    return [dict(zip(columns, row)) for row in cursor.fetchall()]

# --- Main Runner ---
def main():
    connection = None
    try:
        connection = get_db_connection()
        cursor = connection.cursor()

        for index, po_id in enumerate(PO_IDS, start=1):
            query = build_query(po_id)
            logging.info("Executing query #%d for PO_ID: %d", index, po_id)

            try:
                results = execute_query(cursor, query)
                if not results:
                    logging.warning("No data returned for PO_ID: %d", po_id)
                    continue

                invalid_ids = validate_results(results)
                if invalid_ids:
                    logging.error(
                        "Validation FAILED for PO_ID: %d | Invalid LOAD_IDs: %s",
                        po_id, ', '.join(map(str, invalid_ids))
                    )
                else:
                    logging.info("Validation PASSED for PO_ID: %d", po_id)

            except Exception as query_err:
                logging.exception("Error executing query for PO_ID: %d: %s", po_id, query_err)

    except Exception as db_err:
        logging.critical("Database error occurred: %s", db_err)

    finally:
        if connection:
            connection.close()
            logging.info("Database connection closed.")

if __name__ == "__main__":
    main()
